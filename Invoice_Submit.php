<?$SQLArray = $_POST['SQLArray'];$InvoiceCount = 0;$V2DatabaseHost 		= 'localhost';$V2DatabaseName 		= 'echips_v2';$V2DatabaseUser		= 'root';$V2DatabasePass		= 'megacool';// Connect to MYOB DSNtry {	$MYOBDatabase = new PDO("odbc:Driver={MYOAU1001}; Database=MYOBDevelopment; ");	$MYOBDatabase->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);	$MYOBDatabase->beginTransaction();} catch (Exception $e) {	die("Unable to connect to MYOB: " . $e->getMessage());}// Connect to V2 databasetry {	$V2Database = new PDO('mysql:host='.$V2DatabaseHost.';dbname='.$V2DatabaseName.'',$V2DatabaseUser,$V2DatabasePass);} catch (Exception $e) {	die("Unable to connect to V2: " . $e->getMessage());}// Attempt to submit invoices to MYOBforeach ($SQLArray as $SQLString) {	$MYOBDatabase->exec($SQLString);}try {	$MYOBDatabase->commit();	$Response = "Invoice successfully submitted.\n";} catch (Exception $e) {	$Response = "Import failed: ". $e->getMessage(); }$InvoiceNumberArray = array();// Get amount of invoices submitted...foreach($SQLArray as $SQLContent) {	if($SQLContent != "END TRANSACTION") {		$InvoiceCount++;		if (preg_match_all("/Job #[0-9]+/", $SQLContent, $match)) {			$flat = array_shift($match);			$InvoiceNumberArray[] = json_encode($flat);		}	}}// ...and return appropriate invoice numbers$InvoiceNumberArray = str_replace("Job #", "", $InvoiceNumberArray);$InvoiceNumberAmount = count($InvoiceNumberArray);$MYOBQuery = "SELECT TOP ". $InvoiceCount ." * FROM Sales ORDER BY InvoiceNumber DESC";$Result = $MYOBDatabase->query($MYOBQuery);$c = 1;$ReturnInvoiceNumber = array();// Get submission response string from MYOB ODBC$TrimResponse = explode("(SQLEndTran:", $Response);$FurtherTrimResponse = explode("[MYOB ODBC]  - ", $TrimResponse[0]);$MYOBResponseText = rtrim($FurtherTrimResponse[1], " ");if ($MYOBResponseText == "Total does not match; recalculated." || $MYOBResponseText == "Invalid or blank Payment is Due; default substituted.") {	// This is a successful submission to MYOB because it's very bad at error handling itself!		foreach($Result as $row) {		$DecodedInvoiceArray = json_decode($InvoiceNumberArray[$InvoiceNumberAmount - $c]);		$c++;				foreach($DecodedInvoiceArray as $JobNumber) {			$ReturnJobNumber[]  = array("JobNumber" => $JobNumber);			$ReturnInvoiceNumber[] = array("InvoiceNumber" => $row['InvoiceNumber']);						// Submit job number to their corresponding invoice number			$SetInvoiceQuery = $V2Database->prepare("UPDATE jobdetails SET invoicenumber= ? WHERE jobnumber= ?");			//$SetInvoiceQuery->execute(array($row['InvoiceNumber'], $JobNumber));		// Use this for production						$SetInvoiceQuery->execute(array("NULL", $JobNumber));						// Use this for development		}	}	} else {	// Do nothing on failed MYOB submission. This will be dealt with in 'Invoice_Summary.php' as '$MYOBResponseText' will have the reason why the submission failed.}echo json_encode(array("MYOBResponse"=>$MYOBResponseText, "JobNumber"=>$ReturnJobNumber, "InvoiceNumber"=>$ReturnInvoiceNumber));?>